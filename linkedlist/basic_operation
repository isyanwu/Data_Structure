#include<iostream>
using namespace std;
struct node {
	int data;
	node *next;
};

node * creat_linkedlist();//创建一个空链表
node * append_data(node *head, int data);//在链表末端添加数据
int length(node *head);//返回链表长度
node *find_Kth(node *head, int k);//查找第k个节点，返回对应的地址（未找到则返回NULL）

int main() {
	node *head = creat_linkedlist();
	head=append_data(head,5);
	head = append_data(head, 6);
	cout<<length(head);
	system("pause");
	return 0;
}



//创建一个空链表,返回头指针
node * creat_linkedlist() {
	node *head = NULL;
	return head;
}

//在链表末端添加数据
node *append_data(node *head,int data) {
	node *new_node;
	new_node = new node;//创建新节点，并赋值
	new_node->data = data;
	new_node->next = NULL;
	if (head == NULL) {
		head = new_node;
		return head;
	}
	node *link = head;
	while (link->next!=NULL) {//遍历链表
		link = link->next;
	}
	link->next = new_node;
	return head;
}

//返回链表长度
int length(node *head) {
	node *link = head;
	int len = 0;
	while (link != NULL) {
		link = link->next;
		len++;
	}
	return len;
}

//查找第k个节点，返回对应的地址（未找到则返回NULL）
node *find_Kth(node *head, int k) {
	node *link = head;
	int i = 1;
	while (link != NULL & i < k) {
		link = link->next;
		i++;
	}
	if (i == k) 
		return link;
	else 
		return NULL;
}
